name: dockercompose17219445580369766812
services:
  financialTransactionDb:
    container_name: financialTransactionDb
    environment:
      POSTGRES_DB: FinancialTransactionDb
      POSTGRES_PASSWORD: admin1234
      POSTGRES_USER: admin
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: postgres_data
      target: /var/lib/postgresql/data
      volume: {}
  financialstore.api:
    build:
      context: C:\estudo\praticas\desafio-dev\FinancialStore
      dockerfile: src/FinancialStore.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: FinancialStore.API
      target: base
    container_name: financialstore.api
    depends_on:
      financialTransactionDb:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ConnectionStrings:DefaultConnection: Server=financialTransactionDb;Port=5432;Database=FinancialTransactionDb;User
        Id=admin;Password=admin1234;
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: financialstoreapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net7.0/FinancialStore.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8100"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\estudo\praticas\desafio-dev\FinancialStore\src\FinancialStore.API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\estudo\praticas\desafio-dev\FinancialStore
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\jclei\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\jclei\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\jclei\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\jclei\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin1234
    image: dpage/pgadmin4
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5050"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: pgadmin_data
      target: /root/.pgadmin
      volume: {}
networks:
  default:
    name: dockercompose17219445580369766812_default
volumes:
  pgadmin_data:
    name: dockercompose17219445580369766812_pgadmin_data
  postgres_data:
    name: dockercompose17219445580369766812_postgres_data